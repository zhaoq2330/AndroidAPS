 # Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  android: circleci/android@2.4.0
  codecov: codecov/codecov@3.3.0

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    machine: true
    resource_class: nightscout/android

    steps:
      - checkout

      - run:
          name: Create avd
          command: |
            echo "no" | /usr/lib/android-sdk/cmdline-tools/13.0/bin/avdmanager --verbose create avd -n citest -k "system-images;android-31;google_apis_playstore;x86_64" --force

      - run:
          name: Launch emulator
          command: |
            export ANDROID_SDK_ROOT=/usr/lib/android-sdk
            export ANDROID_HOME=/usr/lib/android-sdk
            emulator -avd citest -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true

      - run:
          name: Run connectedFullDebugAndroidTest
          command: |
            export ANDROID_SDK_ROOT=/usr/lib/android-sdk
            export ANDROID_HOME=/usr/lib/android-sdk
            env
            ./gradlew -Dorg.gradle.jvmargs=-Xmx6g connectedFullDebugAndroidTest
          
      - run:
          name: Kill emulators
          command: |
            echo "Killing emulators"
            adb devices | grep emulator | cut -f1 | while read -r line; do adb -s $line emu kill; done
          
      - run:
          name: Run testFullDebugUnitTest
          command: |
            export ANDROID_SDK_ROOT=/usr/lib/android-sdk
            export ANDROID_HOME=/usr/lib/android-sdk
            ./gradlew -Dorg.gradle.jvmargs=-Xmx6g testFullDebugUnitTest

      - run:
          run: Run jacocoAllDebugReport
          command: |
            export ANDROID_SDK_ROOT=/usr/lib/android-sdk
            export ANDROID_HOME=/usr/lib/android-sdk
            ./gradlew --stacktrace jacocoAllDebugReport

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results/junit

      - codecov/upload:
          file: './build/reports/jacoco/jacocoAllDebugReport/jacocoAllDebugReport.xml'

      - run:
          name: Kill java processes
          command: |
            killall java
          when: always

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  dotests:
    jobs:
      - build-and-test
